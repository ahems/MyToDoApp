name: Build and Push App Docker Image to ACR

on: 
  workflow_dispatch:

env:
  DEPLOYMENT_LOCATION: eastus
  RESOURCE_GROUP: My-ToDo-App
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  REPO_NAME: mytodoapp
  TAG: latest
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Azure Login
      uses: Azure/login@v1
      if: ${{ env.AZURE_CLIENT_ID != '' && env.AZURE_TENANT_ID != '' && env.AZURE_SUBSCRIPTION_ID != ''}}
      with:
        client-id: ${{ env.AZURE_CLIENT_ID }}
        tenant-id: ${{ env.AZURE_TENANT_ID }}
        subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}
        
    - name: Set Variables
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        azcliversion: latest
        inlineScript: |

            ACR_REGISTRY="$(az acr list --resource-group ${{ env.RESOURCE_GROUP }} --query [0].name -o tsv)"
            echo 'ACR_REGISTRY='$ACR_REGISTRY >> $GITHUB_ENV
            ACR_USERNAME="$(az acr credential show --name $ACR_REGISTRY --query username -o tsv)"
            echo 'ACR_USERNAME='$ACR_USERNAME >> $GITHUB_ENV
            ACR_PASSWORD="$(az acr credential show --name $ACR_REGISTRY --query passwords[0].value -o tsv)"
            echo 'ACR_PASSWORD='$ACR_PASSWORD >> $GITHUB_ENV

    - name: Create Image Tag
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        azcliversion: latest
        inlineScript: |
        
            TAG="$(az acr repository show-tags --name ${{ env.ACR_REGISTRY }} --repository ${{ env.REPO_NAME }} --orderby time_desc --query [0] -o tsv)"

            if [[ "$TAG" == "latest" ]]; then
                TAG=$(uuidgen) | sed 's/-//g' | cut -c 1-17
                echo 'TAG='$TAG >> $GITHUB_ENV
            fi

    - name: Login to ACR
      uses: azure/docker-login@v2
      with:
        login-server: ${{ env.ACR_REGISTRY }}.azurecr.io
        username: ${{ env.ACR_USERNAME }}
        password: ${{ env.ACR_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ env.ACR_NAME }}/${{ env.REPO_NAME }}:${{ env.TAG }}
        file: Dockerfile
